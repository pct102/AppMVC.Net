@using System.Data
@using Microsoft.EntityFrameworkCore

@inject MvcMovieContext dbContext

@{
  ViewData["Title"] = "Database Information";
  var connect = dbContext.Database.GetDbConnection();
  var dbName = connect.Database;
  var canConnect = dbContext.Database.CanConnect();
}

<h1> Database Manage</h1>
<p> - Database : @dbName</p>
<p> - Source: @connect.DataSource</p>
<p> - State: @connect.State</p>
<hr>

<h2> Migrations</h2>
@foreach(var migration in dbContext.Database.GetAppliedMigrations()){
  <p>@migration</p>
}

@foreach(var migration in dbContext.Database.GetPendingMigrations()){
  <p>@migration (pending)</p>
}

@if(dbContext.Database.GetPendingMigrations().Any()){
  <form method="post">
    <button class="btn btn-primary" asp-action="Migrate">
      Create Database (Update Migrations)
    </button>
  </form>
}

@if (!canConnect){
  <p class="alert alert-danger">Cannot connect to database</p>
}

@if (canConnect){
  <h2>Tables:</h2>
  await dbContext.Database.OpenConnectionAsync();
  var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
  <ul>
    @foreach (System.Data.DataRow row in table.Rows){
      <li>@row["TABLE_NAME"]</li>
    }
  </ul>

  <a class="btn btn-danger" asp-action="DeleteDb">Delete Database: @dbName</a>

}